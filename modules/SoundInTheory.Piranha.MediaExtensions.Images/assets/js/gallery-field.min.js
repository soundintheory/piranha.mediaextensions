Vue.component("gallery-field",{props:["uid","model","meta"],data(){return{selectedImageIndex:null,isDragAndDropInitialised:!1}},methods:{imageIsEmpty:function(e){return!e.id},getUrl:function(e){return console.info("image",e),e.publicUrl?piranha.utils.formatUrl(e.publicUrl):piranha.utils.formatUrl("~/manager/assets/img/empty-image.png")},select:function(e,i){piranha.mediapicker.openCurrentFolder(e=>{this.update(e,i)},"Image")},remove:function(e){this.model.images[e]={},this.model.images=[...this.model.images]},update:function(e,i){"Image"===e.type?(this.model.images[i]={id:e.id,folderId:e.folderId,type:e.type,filename:e.filename,title:e.title,contentType:e.contentType,publicUrl:e.publicUrl},this.model.images=[...this.model.images],this.meta.notifyChange&&this.$emit("update-title",{uid:this.uid,title:null!=this.model.images[i].title?this.model.images[i].title+" ("+this.model.images[i].filename+")":this.model.images[i].filename})):console.log("No image was selected")},add(){this.model.images.push({key:(new Date).getUTCMilliseconds().toString()}),Vue.nextTick(()=>{this.isDragAndDropInitialised||this.initDragAndDrop()})},del(e){this.model.images.splice(e,1)},moveUp(e){var i;0!=e&&(i=this.model.images.splice(e,1)[0],this.model.images.splice(e-1,0,i))},moveDown(e){var i;e+1!==this.model.images.length&&(i=this.model.images.splice(e,1)[0],this.model.images.splice(e+1,0,i))},getImageKey(e){return e.id||e.key},moveItem(e,i){this.model.images.splice(i,0,this.model.images.splice(e,1)[0])},initDragAndDrop:function(){const i=this;window.sortable(".gallery-sortable-container",{items:".gallery-sortable-item"})[0].addEventListener("sortupdate",function(e){i.moveItem(e.detail.origin.index,e.detail.destination.index)}),this.isDragAndDropInitialised=!0}},computed:{isEmpty:function(){return null==this.model.media}},mounted:function(){this.model.getTitle=function(){return null!=selectedImage.media?null!=this.model.media.title?selectedImage.title+" ("+selectedImage.filename+")":selectedImage.filename:"No image selected"},document.querySelector(".gallery-sortable-container")&&this.initDragAndDrop()},beforeMount(){null!==this.model.images&&void 0!==this.model.images||(this.model.images=[])},template:'\n<div class="card">\n    <div class="card-body">\n        <div class="blocks">\n            <div>\n                <div class="block block-group" :id="uid">\n                    <div class="block-header mb-2">\n                        <div class="title">\n                            <i class="fas fa-images"></i>\n                            <strong>Gallery</strong>\n                        </div>\n                        <div class="actions">\n                            <span class="btn btn-sm" @click="add()">\n                                <i class="fas fa-plus"></i>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div v-if="model.images.length === 0" class="empty-info">\n                        <p>{{ piranha.resources.texts.emptyAddAbove }}</p>\n                    </div>\n                    <div v-else class="container-fluid bg-white m-2">\n                        <div class="row row-cols-3 align-items-center gallery-sortable-container">\n                            <div class="block gallery-sortable-item m-0 col h-full h-100" v-for="(image, index) in model.images" v-bind:key="getImageKey(image)">\n                                <div class="block-body has-media-picker rounded col text-center gallery-body" >\n                                    <div class="gallery-body-cloaked">\n                                        <div class="gallery-body-description">\n                                            <div v-if="image.filename" v:bind="image.filename">{{ image.filename }}</div>\n                                            <div v-else>New Image</div>\n                                        </div>\n                                        <div class="gallery-body-actions-left">\n                                            <button class="btn btn-primary btn-sm gallery-body-action" v-on:click.prevent="select(image, index)"><i v-if="imageIsEmpty(image)" class="fas fa-plus"></i><i v-else class="fas fa-pen"></i></button>\n                                        </div>\n                                        <div class="gallery-body-actions-right">\n                                            <button class="btn btn-secondary btn-sm gallery-body-action" v-if="!imageIsEmpty(image)" v-on:click.prevent="remove(index)"><i class="fas fa-eraser"></i></button>\n                                            <button class="btn btn-danger btn-sm gallery-body-action" v-on:click.prevent="del(index)"><i class="fas fa-trash"></i></button>\n                                        </div>\n                                    </div>\n                                    <img class="rounded" :src="getUrl(image)"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'});